<?php

/**
 * Implements hook_init().
 */
function css_browser_selector_init() {
  if (variable_get('css_browser_selector_use_js', 0) == TRUE) {
    $path = drupal_get_path('module', 'css_browser_selector');
    drupal_add_js($path .'/css_browser_selector.js');
  }
}

/**
 * Implements hook_preprocess().
 */
function css_browser_selector_preprocess_html(&$vars) {
  if (variable_get('css_browser_selector_use_js', 0) == FALSE) {
    // Get the CSS browser selectors.
    static $selectors = '';
    if (empty($selectors)) {
      $selectors = css_browser_selector_get_selectors();
    }
    // Add the classnames to the required $vars.
    $class_variables = explode("\n", variable_get('css_browser_selector_class_variables', 'classes_array'));
    foreach ($class_variables as $class_variable) {
      $vars[$class_variable][] = $selectors;
    }
  }
}

/**
 * Implementation of hook_menu().
 */
function css_browser_selector_menu() {
  $items = array();

  $items['admin/config/media/css-browser-selector'] = array(
    'title' => t('CSS Browser Selector'),
    'description' => t('Configuration for CSS Browser Selector.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('css_browser_selector_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'css_browser_selector.admin.inc',
  );

  return $items;
}

/**
 * Parse the user agent and return a string of CSS selectors.
 *
 * @param string $ua
 * @return string
 */
function css_browser_selector_get_selectors($ua = '') {
  $selectors = array();

  $ua = empty($ua) ? strtolower($_SERVER['HTTP_USER_AGENT']) : strtolower($ua);

  // OS selectors.
  if (strpos($ua, 'j2me') !== FALSE) {
    $selectors[] = 'mobile';
    $selectors[] = 'j2me';
  }
  elseif (strpos($ua, 'iphone') !== FALSE) {
    $selectors[] = 'mobile';
    $selectors[] = 'iphone';
  }
  elseif (strpos($ua, 'ipod') !== FALSE) {
    $selectors[] = 'mobile';
    $selectors[] = 'ipod';
  }
  elseif (strpos($ua, 'ipad') !== FALSE) {
    $selectors[] = 'mobile';
    $selectors[] = 'ipad';
  }
  elseif (strpos($ua, 'mac') !== FALSE || strpos($ua, 'darwin') !== FALSE) {
    $selectors[] = 'mac';
  }
  elseif (strpos($ua, 'webtv') !== FALSE) {
    $selectors[] = 'webtv';
  }
  elseif (strpos($ua, 'win') !== FALSE) {
    $selectors[] = 'win';
    if (strpos($ua, 'windows nt 6.0') !== FALSE) {
      $selectors[] = 'vista';
    }
    elseif (strpos($ua, 'windows nt 6.1') !== FALSE) {
      $selectors[] = 'win7';
    }
    elseif (strpos($ua, 'windows nt 6.2') !== FALSE) {
      $selectors[] = 'win8';
    }
  }
  elseif (strpos($ua, 'freebsd') !== FALSE) {
    $selectors[] = 'freebsd';
  }
  elseif (strpos($ua, 'x11') !== FALSE || strpos($ua, 'linux') !== FALSE) {
    $selectors[] = 'linux';
  }

  // Browser selectors.
  if (!preg_match('/opera|webtv/i', $ua) && preg_match('/msie\s(\d+)/', $ua, $matches)) {
    $selectors[] = 'ie';
    $selectors[] = 'ie'. $matches[1];
  }
  elseif (strpos($ua, 'firefox/') !== FALSE) {
    preg_match('/firefox\/(\d+\.\d+)/', $ua, $matches);
    list($major, $minor) = explode('.', $matches[1]);
    $selectors[] = 'gecko';
    $selectors[] = 'ff'. $major;
    if ($minor != 0) {
      $selectors[] = 'ff'. $major .'_'. $minor;
    }
  }
  elseif (strpos($ua, 'gecko/') !== FALSE) {
    $selectors[] = 'gecko';
  }
  elseif (strpos($ua, 'opera') !== FALSE) {
    $selectors[] = 'opera';
    if (preg_match('/version\/(\d+)/', $ua, $matches)) {
      $selectors[] = 'opera'. $matches[1];
    }
    elseif (preg_match('/opera(\s|\/)(\d+)/', $ua, $matches)) {
      $selectors[] = 'opera'. $matches[2];
    }
  }
  elseif (strpos($ua, 'konqueror') !== FALSE) {
    $selectors[] = 'konqueror';
  }
  elseif (strpos($ua, 'blackberry') !== FALSE) {
    $selectors[] = 'mobile';
    $selectors[] = 'blackberry';
  }
  elseif (strpos($ua, 'android') !== FALSE) {
    $selectors[] = 'mobile';
    $selectors[] = 'android';
  }
  elseif (strpos($ua, 'chrome') !== FALSE) {
    $selectors[] = 'webkit';
    $selectors[] = 'chrome';
  }
  elseif (strpos($ua, 'iron') !== FALSE) {
    $selectors[] = 'webkit';
    $selectors[] = 'iron';
  }
  elseif (strpos($ua, 'applewebkit/') !== FALSE) {
    $selectors[] = 'webkit';
    $selectors[] = 'safari';
    if (preg_match('/version\/(\d+)/', $ua, $matches)) {
      $selectors[] = 'safari'. $matches[1];
    }
  }
  elseif (strpos($ua, 'mozilla/') !== FALSE) {
    $selectors[] = 'gecko';
  }

  return implode(' ', $selectors);
}
