<?php
/**
 * Display Apache error log messages
 */

/**
 * Implementation of hook_init().
 */
function error_log_init() {
  drupal_add_css(drupal_get_path('module', 'error_log') .'/error_log.css', 'module');
}
/**
 * Implementation of hook_help().
 */
function error_log_help($path, $arg) {
  switch ($path) {
    case 'admin/help#error_log':
      $output = 'The Error Log module displays a page with the last 100 Apache error log messages.';
      return $output;
  }
}
/**
 * Implementation of hook_perm().
 */
function error_log_permission() {
  return array(
    'error_log' => array(
      'title' => t('Display Error Log'),
      'description' => t('User is able to view the Apache error log'),
    ),
  );
}
/**
 * Implementation of hook_block_info()
 */
function error_log_block_info() {

  $blocks['error_log'] = array(
    'info' => t('Error log'),
  );

  return $blocks;
}
/**
 * Implementation of hook_menu()
 */
function error_log_menu() {
  $items['error_log'] = array(
    'page callback' => 'error_log_display',
    'title' => 'Error Log',
    'type' => MENU_CALLBACK,
    'access arguments' => array('error_log'),
  );
  return $items;
}
/**
 * Helper function to display the error log
 */
function error_log_display() {
  $error_contents = `tail -n100 /vectorbase/web/logs/drupal2.error_log | tac`;
  $new_contents = '';
  foreach(preg_split("/(\r?\n)/", $error_contents) as $line){
    $new_contents .= '<SPAN TITLE="' . $line . '">' . highlight(highlight($line,'Fatal','fatal'),date('D M d'),'today') . '</SPAN><BR>';
  }
  $content = '<HTML><HEAD><TITLE>Error Log</TITLE><META HTTP-EQUIV="Refresh" CONTENT=60><STYLE>body { background-color:#000000; color:#00FF00; font-family:monospace; width:100%; white-space:nowrap; } span.today { color:#FFFF00; } span.fatal { color:#FF0000; }</STYLE></HEAD><BODY>';
  $content .= $new_contents;
  $content .= '</BODY></HTML>';
  print $content;
}
function highlight($haystack,$needle,$class)
{
$haystack=preg_replace("/(.*$needle.*)/i","<SPAN class='$class'>\${1}</SPAN>",$haystack);
return $haystack;
}
